openapi: 3.0.3
info:
  title: simpleblog API
  version: 1.0.0 (v1)
paths:
  /api/auth/jwt/login/:
    post:
      operationId: api_auth_jwt_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /api/auth/jwt/refresh/:
    post:
      operationId: api_auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/jwt/verify/:
    post:
      operationId: api_auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/contact/contact/:
    post:
      operationId: api_contact_contact_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputContact'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutPutContact'
          description: ''
  /api/post/articles/:
    get:
      operationId: api_post_articles_retrieve
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutPutPost'
          description: ''
  /api/post/createarticle/:
    post:
      operationId: api_post_createarticle_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputPost'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutPutPost'
          description: ''
  /api/post/post_detail/{id}/{slug}/:
    get:
      operationId: api_post_post_detail_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutPutPostDetail'
          description: ''
components:
  schemas:
    InputContact:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 45
        name:
          type: string
          maxLength: 45
        content:
          type: string
          maxLength: 1000
      required:
      - content
      - email
      - name
    InputPost:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        content:
          type: string
          maxLength: 1000
        is_online:
          type: boolean
          default: true
      required:
      - content
      - title
    MyTokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    OutPutContact:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        name:
          type: string
          maxLength: 255
        content:
          type: string
      required:
      - content
      - email
      - name
    OutPutPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        author:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
      required:
      - author
      - id
      - slug
      - title
      - url
    OutPutPostDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        title:
          type: string
          maxLength: 255
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - content
      - id
      - slug
      - title
      - updated_at
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
